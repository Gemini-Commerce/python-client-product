# coding: utf-8

"""
    Product Service

    API for managing products

    The version of the OpenAPI document: v1
    Contact: info@gemini-commerce.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from product.models.product_list_products_request import ProductListProductsRequest

class TestProductListProductsRequest(unittest.TestCase):
    """ProductListProductsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductListProductsRequest:
        """Test ProductListProductsRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductListProductsRequest`
        """
        model = ProductListProductsRequest()
        if include_optional:
            return ProductListProductsRequest(
                tenant_id = '',
                page_size = '',
                page_token = '',
                filter = product.models.list_products_request_filter.ListProductsRequestFilter(
                    created_at_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = True, ),
                filter_mask = ''
            )
        else:
            return ProductListProductsRequest(
        )
        """

    def testProductListProductsRequest(self):
        """Test ProductListProductsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
