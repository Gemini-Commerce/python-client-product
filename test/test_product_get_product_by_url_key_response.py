# coding: utf-8

"""
    Product Service

    API for managing products

    The version of the OpenAPI document: v1
    Contact: info@gemini-commerce.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from product.models.product_get_product_by_url_key_response import ProductGetProductByUrlKeyResponse

class TestProductGetProductByUrlKeyResponse(unittest.TestCase):
    """ProductGetProductByUrlKeyResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductGetProductByUrlKeyResponse:
        """Test ProductGetProductByUrlKeyResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductGetProductByUrlKeyResponse`
        """
        model = ProductGetProductByUrlKeyResponse()
        if include_optional:
            return ProductGetProductByUrlKeyResponse(
                product = product.models.product_product_entity.productProductEntity(
                    tenant_id = '', 
                    grn = '', 
                    entity_type = '', 
                    entity_code = '', 
                    id = '', 
                    code = '', 
                    variant_attributes = [
                        ''
                        ], 
                    is_configurable = True, 
                    is_virtual = True, 
                    is_giftcard = True, 
                    has_configurator = True, 
                    url_key = product.models.product_localized_text.productLocalizedText(
                        value = {
                            'key' : ''
                            }, ), 
                    media_variant_attributes = [
                        ''
                        ], 
                    attributes = {
                        'key' : {
                            'key' : None
                            }
                        }, 
                    variants = {
                        'key' : product.models.product_product_variant.productProductVariant(
                            id = '', 
                            grn = '', 
                            max_saleable_quantity = 56, )
                        }, 
                    media_gallery = product.models.product_media_gallery.productMediaGallery(
                        entries = [
                            product.models.product_media_gallery_entry.productMediaGalleryEntry(
                                id = '', 
                                asset_grn = '', 
                                position = 56, 
                                metadata = [
                                    product.models.product_media_gallery_entry_metadata.productMediaGalleryEntryMetadata(
                                        roles = [
                                            ''
                                            ], 
                                        alt = product.models.product_localized_text.productLocalizedText(), )
                                    ], )
                            ], ), 
                    max_saleable_quantity = 56, 
                    assets = product.models.product_assets.productAssets(), 
                    created_at = '', 
                    updated_at = '', )
            )
        else:
            return ProductGetProductByUrlKeyResponse(
        )
        """

    def testProductGetProductByUrlKeyResponse(self):
        """Test ProductGetProductByUrlKeyResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
