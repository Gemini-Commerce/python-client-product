# coding: utf-8

"""
    Product Service

    API for managing products

    The version of the OpenAPI document: v1
    Contact: info@gemini-commerce.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from product.models.product_update_product_request import ProductUpdateProductRequest

class TestProductUpdateProductRequest(unittest.TestCase):
    """ProductUpdateProductRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductUpdateProductRequest:
        """Test ProductUpdateProductRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductUpdateProductRequest`
        """
        model = ProductUpdateProductRequest()
        if include_optional:
            return ProductUpdateProductRequest(
                tenant_id = '',
                id = '',
                code = '',
                attributes_mask = product.models.product_field_mask.productFieldMask(
                    paths = [
                        ''
                        ], ),
                url_key = product.models.product_localized_text.productLocalizedText(
                    value = {
                        'key' : ''
                        }, ),
                max_saleable_quantity = 56,
                media_variant_attributes = [
                    ''
                    ],
                attributes = {
                    'key' : {
                        'key' : None
                        }
                    },
                variants = {
                    'key' : product.models.product_product_variant.productProductVariant(
                        id = '', 
                        grn = '', 
                        max_saleable_quantity = 56, 
                        attributes = {
                            'key' : {
                                'key' : None
                                }
                            }, )
                    }
            )
        else:
            return ProductUpdateProductRequest(
        )
        """

    def testProductUpdateProductRequest(self):
        """Test ProductUpdateProductRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
